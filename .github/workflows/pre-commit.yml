---
name: Pre-commit

'on':
  push:
    branches:
      - main
  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Prepare repo artifact
        run: |
          mkdir repo
          shopt -s dotglob
          rsync -a --exclude=repo "${{ github.workspace }}/" repo/
          rm -rf repo/repo || true
          if [ ! -d repo/.git ]; then
            echo ".git directory missing!"
            exit 1
          fi
          tar -czf repo.tar.gz -C repo .
      - uses: actions/upload-artifact@v4
        with:
          name: repo
          path: repo.tar.gz

  filter:
    runs-on: ubuntu-latest
    needs: prepare
    outputs:
      n8n: ${{ steps.filter.outputs.n8n }}
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: repo
          path: .
      - name: Extract repo
        run: |
          mkdir repo
          tar -xzf repo.tar.gz -C repo
          ls -al repo
      - id: filter
        uses: dorny/paths-filter@v2
        with:
          working-directory: repo
          filters: |
            n8n:
              - 'n8n/**'
              - '!n8n/README.md'
              - '!n8n/docs/**'

  helm-tools:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: repo
          path: .
      - name: Extract repo
        run: |
          mkdir repo
          tar -xzf repo.tar.gz -C repo
          ls -al repo
      - name: Ensure repo context exists
        run: |
          if [ ! -d repo ]; then
            echo "ERROR: repo directory not found!" >&2
            exit 1
          fi
          ls -al repo
      - name: Build helm-tools image if missing
        env:
          IMAGE: ghcr.io/${{ github.repository_owner }}/helm-tools:v5
        run: |
          if ! docker manifest inspect "$IMAGE" >/dev/null 2>&1; then
            echo "${{ secrets.GITHUB_TOKEN }}" | \
              docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker build -t "$IMAGE" \
              -f repo/.github/docker/helm-tools.Dockerfile repo
            docker push "$IMAGE"
          else
            echo "$IMAGE already exists"
          fi

  pre-commit:
    runs-on: ubuntu-latest
    needs: [prepare, filter, helm-tools]
    if: needs.filter.outputs.n8n == 'true'
    # Use a tagged image to avoid pulling the floating `latest`
    container:
      image: ghcr.io/${{ github.repository_owner }}/helm-tools:v5
    steps:
      - name: Configure git safe directory
        run: git config --global --add safe.directory "$(realpath repo)"
      - uses: actions/download-artifact@v4
        with:
          name: repo
          path: .
      - name: Extract repo
        run: |
          mkdir repo
          tar -xzf repo.tar.gz -C repo
          ls -al repo
      - name: Set Helm version
        run: |
          echo "HELM_VERSION=$(cat .github/helm-version.txt)" >> "$GITHUB_ENV"
        working-directory: repo
      - name: Setup Helm tools
        uses: ./repo/.github/actions/setup-helm-tools
        with:
          chart_dir: repo/n8n
      - name: Cache pre-commit env
        uses: actions/cache@v3
        with:
          path: ${{ env.HOME }}/.cache/pre-commit
          key: pre-commit-${{ runner.os }}-${{ hashFiles('.pre-commit-config.yaml') }}  # yamllint disable-line rule:line-length
          restore-keys: |
            pre-commit-${{ runner.os }}-
      - name: Run pre-commit
        run: |
          pre-commit run --files $(
            if [ -n "${{ github.event.pull_request.base.sha }}" ]; then
              git diff --name-only \
                ${{ github.event.pull_request.base.sha }} \
                ${{ github.sha }}
            else
              git ls-files
            fi
          )
        working-directory: repo
