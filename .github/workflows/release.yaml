name: Release Charts

on:
  push:
    branches:
      - main
  workflow_dispatch:

permissions:
  contents: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Prepare repo artifact directory
        run: |
          mkdir repo
          shopt -s dotglob
          rsync -a --exclude=repo ${{ github.workspace }}/ repo/
          rm -rf repo/repo || true
      - uses: actions/upload-artifact@v4
        with:
          name: repo
          path: repo

  release:
    runs-on: ubuntu-latest
    # Use tagged release-tools image
    container:
      image: ghcr.io/anyfavors/release-tools:v1
    defaults:
      run:
        working-directory: repo
    needs: prepare
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: repo
          path: repo
      - name: Move repo contents to workspace
        run: |
          echo "Before moving:"
          ls -al repo || true
          if [ -d repo/repo ]; then
            shopt -s dotglob
            mv repo/repo/* repo/
            mv repo/repo/.[!.]* repo/ || true
            rmdir repo/repo
          fi
          echo "Final structure:"
          ls -al repo
      - name: Ensure repo context exists
        run: |
          if [ ! -d repo ]; then
            echo "ERROR: repo directory not found!" >&2
            exit 1
          fi
          ls -al repo
      - name: Configure Git
        run: |
          git config user.name "$GITHUB_ACTOR"
          git config user.email "$GITHUB_ACTOR@users.noreply.github.com"

      # Helm and git-chglog are pre-installed in the container

      - name: Generate changelog
        run: git-chglog -o CHANGELOG.md

      - name: Commit changelog
        run: |
          git add CHANGELOG.md
          if git diff --cached --quiet; then
            echo "No changelog updates"
          else
            git commit -m "chore: update CHANGELOG" && git push
          fi

      - name: Draft release notes
        uses: release-drafter/release-drafter@v6
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Run chart-releaser
        id: cr
        uses: helm/chart-releaser-action@v1.7.0
        with:
          charts_dir: n8n
        env:
          CR_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # helm-push plugin is available in the container

      - name: Push chart package to OCI registry
        if: steps.cr.outputs.changed_charts != ''
        env:
          OCI_REPO: ghcr.io/${{ github.repository_owner }}/charts
        run: |
          helm registry login ghcr.io -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }}
          chart=$(ls .cr-release-packages/n8n-*.tgz | head -n 1)
          helm push "$chart" "oci://$OCI_REPO"

      # cosign is available in the container

      - name: Sign chart packages and upload signatures
        if: steps.cr.outputs.changed_charts != ''
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          COSIGN_EXPERIMENTAL: 'true'
        run: |
          for pkg in .cr-release-packages/*.tgz; do
            cosign sign-blob --yes --output-signature "$pkg.sig" "$pkg"
            tag=$(basename "$pkg" .tgz)
            gh release upload "$tag" "$pkg.sig" --clobber
          done

      - name: Verify signatures
        if: steps.cr.outputs.changed_charts != ''
        run: |
          for pkg in .cr-release-packages/*.tgz; do
            cosign verify-blob --key cosign.pub --signature "$pkg.sig" "$pkg"
          done

      - name: Upload chart packages
        if: steps.cr.outputs.changed_charts != ''
        uses: actions/upload-artifact@v4
        with:
          name: chart-packages
          path: .cr-release-packages/*.tgz

