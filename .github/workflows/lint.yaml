name: Lint

on:
  push:
    branches:
      - main
  pull_request:
  schedule:
    - cron: '0 0 * * *'

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup Helm
        uses: azure/setup-helm@v3
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Install helm-docs
        run: |
          curl -sSL https://github.com/norwoodj/helm-docs/releases/download/v1.14.2/helm-docs_1.14.2_Linux_x86_64.tar.gz \
            | tar -xz -C /usr/local/bin helm-docs
      - name: Install helm-unittest plugin
        run: helm plugin install https://github.com/helm-unittest/helm-unittest
      - name: Install helm-schema-gen plugin
        run: helm plugin install https://github.com/karuppiah7890/helm-schema-gen.git
      - name: Verify chart documentation
        run: |
          helm-docs
          git diff --exit-code
      - name: Helm lint
        run: helm lint n8n
      - name: Helm lint with values
        run: helm lint n8n --values n8n/values.yaml
      - name: Helm unit tests
        run: helm unittest n8n
      - name: Helm template
        run: helm template n8n
      - name: Validate values schema
        run: |
          helm schema-gen n8n/values.yaml > generated-values.schema.json
          diff -u n8n/values.schema.json generated-values.schema.json
      - name: Get chart version
        id: chart
        run: |
          version=$(grep '^appVersion:' n8n/Chart.yaml | awk '{print $2}' | tr -d '"')
          echo "version=$version" >> "$GITHUB_OUTPUT"
      - name: Scan chart for vulnerabilities
        uses: aquasecurity/trivy-action@0.14.0
        with:
          scan-type: fs
          scan-ref: n8n
          exit-code: 1
          severity: HIGH
      - name: Scan container image for vulnerabilities
        run: |
          trivy image n8nio/n8n:${{ steps.chart.outputs.version }} \
            --severity HIGH,CRITICAL --exit-code 1

  install:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - uses: actions/checkout@v4
      - name: Setup Helm
        uses: azure/setup-helm@v4
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Create kind cluster
        uses: helm/kind-action@v1.8.0
        with:
          wait: 120s
      - name: Install chart
        run: helm install my-n8n ./n8n --wait --timeout 300s
      - name: Wait for pods
        run: kubectl wait --namespace default --for=condition=ready pod -l "app.kubernetes.io/name=n8n,app.kubernetes.io/instance=my-n8n" --timeout=300s
      - name: Get pods
        run: kubectl get pods -n default
      - name: Delete release
        run: helm uninstall my-n8n
