name: Check Updates

on:
  schedule:
    - cron: '0 1 * * *'
  workflow_dispatch:

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - uses: actions/upload-artifact@v4
        with:
          name: repo
          path: ${{ github.workspace }}

  helm:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: repo
      - name: Get latest Helm version
        id: latest
        run: |
          latest=$(curl -s https://api.github.com/repos/helm/helm/releases/latest | jq -r '.tag_name')
          echo "latest=$latest" >> "$GITHUB_OUTPUT"
      - name: Get current Helm version
        id: current
        run: |
          current=$(cat .github/helm-version.txt)
          echo "current=$current" >> "$GITHUB_OUTPUT"
      - name: Update files
        if: steps.latest.outputs.latest != steps.current.outputs.current
        run: echo "${{ steps.latest.outputs.latest }}" > .github/helm-version.txt
      - name: Create Pull Request
        if: steps.latest.outputs.latest != steps.current.outputs.current
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: "chore: update Helm to ${{ steps.latest.outputs.latest }}"
          title: "chore: update Helm to ${{ steps.latest.outputs.latest }}"
          body: "Automated update of Helm CLI version to ${{ steps.latest.outputs.latest }}."
          branch: "update-helm-${{ steps.latest.outputs.latest }}"
          delete-branch: true
          labels: automated
      - name: Enable auto-merge
        if: steps.cpr.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash

  n8n:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: repo
      - name: Set Helm version
        run: echo "HELM_VERSION=$(cat .github/helm-version.txt)" >> "$GITHUB_ENV"
      - name: Cache Helm plugins and helm-docs
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.HOME }}/.local/share/helm/plugins
            /usr/local/bin/helm-docs
          key: helm-plugins-${{ env.HELM_VERSION }}
          restore-keys: |
            helm-plugins-
      - name: Setup Helm tools
        uses: ./.github/actions/setup-helm-tools
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Get latest n8n version
        id: latest
        run: |
          latest=$(curl -s "https://hub.docker.com/v2/repositories/n8nio/n8n/tags?page_size=50" \
            | jq -r '.results[].name' \
            | grep -E '^[0-9]+\.[0-9]+\.[0-9]+$' \
            | sort -V \
            | tail -n1)
          echo "latest=$latest" >> "$GITHUB_OUTPUT"
      - name: Get chart version
        id: current
        run: |
          current=$(grep '^appVersion:' n8n/Chart.yaml | awk '{print $2}' | tr -d '"')
          echo "current=$current" >> "$GITHUB_OUTPUT"
      - name: Update files
        if: steps.latest.outputs.latest != steps.current.outputs.current
        run: |
          sed -i -E "s/appVersion: \".*\"/appVersion: \"${{ steps.latest.outputs.latest }}\"/" n8n/Chart.yaml
          sed -i -E "s/tag: \".*\"/tag: \"${{ steps.latest.outputs.latest }}\"/" n8n/values.yaml
          helm-docs
      - name: Create Pull Request
        if: steps.latest.outputs.latest != steps.current.outputs.current
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: "chore: update n8n version to ${{ steps.latest.outputs.latest }}"
          title: "chore: update n8n version to ${{ steps.latest.outputs.latest }}"
          body: "Automated update of n8n image version to ${{ steps.latest.outputs.latest }}."
          branch: "update-n8n-${{ steps.latest.outputs.latest }}"
          delete-branch: true
          labels: automated
      - name: Enable auto-merge
        if: steps.cpr.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash

  postgres:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: repo
      - name: Set Helm version
        run: echo "HELM_VERSION=$(cat .github/helm-version.txt)" >> "$GITHUB_ENV"
      - name: Cache Helm plugins and helm-docs
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.HOME }}/.local/share/helm/plugins
            /usr/local/bin/helm-docs
          key: helm-plugins-${{ env.HELM_VERSION }}
          restore-keys: |
            helm-plugins-
      - name: Setup Helm tools
        uses: ./.github/actions/setup-helm-tools
        env:
          GITHUB_TOKEN: ${{ github.token }}
      - name: Get latest PostgreSQL version
        id: latest
        run: |
          latest=$(helm search repo bitnami/postgresql --versions | awk 'NR==2{print $2}')
          echo "latest=$latest" >> "$GITHUB_OUTPUT"
      - name: Get chart version
        id: current
        run: |
          current=$(grep -A2 'name: postgresql' n8n/Chart.yaml | grep version | awk '{print $2}')
          echo "current=$current" >> "$GITHUB_OUTPUT"
      - name: Update files
        if: steps.latest.outputs.latest != steps.current.outputs.current
        run: |
          sed -i -E "/name: postgresql/{n;s/version: .*/version: ${{ steps.latest.outputs.latest }}/;}" n8n/Chart.yaml
          helm-docs
      - name: Create Pull Request
        if: steps.latest.outputs.latest != steps.current.outputs.current
        id: cpr
        uses: peter-evans/create-pull-request@v7
        with:
          commit-message: "chore: update postgresql chart version to ${{ steps.latest.outputs.latest }}"
          title: "chore: update postgresql chart version to ${{ steps.latest.outputs.latest }}"
          body: "Automated update of PostgreSQL chart dependency to ${{ steps.latest.outputs.latest }}."
          branch: "update-postgresql-${{ steps.latest.outputs.latest }}"
          delete-branch: true
          labels: automated
      - name: Enable auto-merge
        if: steps.cpr.outputs.pull-request-operation == 'created'
        uses: peter-evans/enable-pull-request-automerge@v3
        with:
          pull-request-number: ${{ steps.cpr.outputs.pull-request-number }}
          merge-method: squash
