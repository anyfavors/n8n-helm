name: Render Helm Template

on:
  pull_request:
    paths:
      - 'n8n/**'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  prepare:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Prepare repo artifact directory
        run: |
          mkdir repo
          shopt -s dotglob
          find ${{ github.workspace }} -mindepth 1 -maxdepth 1 ! -name repo -exec cp -r {} repo/ \;
          cp -r ${{ github.workspace }}/.github repo/
      - uses: actions/upload-artifact@v4
        with:
          name: repo
          path: repo

  helm-tools:
    runs-on: ubuntu-latest
    needs: prepare
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: repo
          path: repo
      - name: Move repo contents to workspace
        run: |
          echo "Before moving:"
          ls -al repo || true
          if [ -d repo/repo ]; then
            shopt -s dotglob
            mv repo/repo/* repo/
            mv repo/repo/.[!.]* repo/ || true
            rmdir repo/repo
          fi
          echo "Final structure:"
          ls -al repo
      - name: Ensure repo context exists
        run: |
          if [ ! -d repo ]; then
            echo "ERROR: repo directory not found!" >&2
            exit 1
          fi
          ls -al repo
      - name: Build helm-tools image if missing
        env:
          IMAGE: ghcr.io/${{ github.repository_owner }}/helm-tools:v2
        run: |
          if ! docker manifest inspect "$IMAGE" >/dev/null 2>&1; then
            echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
            docker build -t "$IMAGE" -f repo/.github/docker/helm-tools.Dockerfile repo
            docker push "$IMAGE"
          else
            echo "$IMAGE already exists"
          fi

  render:
    runs-on: ubuntu-latest
    container: ghcr.io/anyfavors/helm-tools:v2
    needs: [prepare, helm-tools]
    defaults:
      run:
        working-directory: repo
    steps:
      - uses: actions/download-artifact@v4
        with:
          name: repo
          path: repo
      - name: Set Helm version
        run: echo "HELM_VERSION=$(cat .github/helm-version.txt)" >> "$GITHUB_ENV"
      - name: Cache Helm plugins and helm-docs
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.HOME }}/.local/share/helm/plugins
            /usr/local/bin/helm-docs
          key: helm-plugins-${{ env.HELM_VERSION }}
          restore-keys: |
            helm-plugins-
      - name: Render chart
        id: render
        run: |
          helm template n8n > template.txt
          size=$(wc -c < template.txt)
          echo "size=$size" >> "$GITHUB_OUTPUT"
      - name: Upload template artifact
        if: steps.render.outputs.size > 65000
        uses: actions/upload-artifact@v4
        with:
          name: helm-template
          path: template.txt
      - name: Comment with template
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            let body = fs.readFileSync('template.txt', 'utf8');
            const limit = 65000;
            if (body.length > limit) {
              body = body.slice(0, limit) + '\n\nOutput truncated. Download artifact for full template.';
            }
            github.rest.issues.createComment({
              ...context.repo,
              issue_number: context.issue.number,
              body,
            });
